//主地图
public class Mapexample {

    public static void main(String[] args) {

        char[][] map = new char[40][40];

        for (int i = 0; i < 40; i++) {
            for (int j = 0; j < 40; j++) {
                map[i][j] = '.'; // '.'代表可移动空间
            }
        }

//地图的边界
        for (int i = 0; i < 40; i++) {
            map[i][0] = '#';
            map[i][39] = '#';
        }
        for (int j = 0; j < 40; j++) {
            map[0][j] = '#';
            map[39][j] = '#';
        }

// Z
// 顶部横线
        for (int j = 1; j < 7; j++) {
            map[2][j] = '#';
        }

// 底部横线
        for (int j = 1; j < 7; j++) {
            map[6][j] = '#';
        }

// 斜线
        for (int i = 2; i < 7; i++) {
            map[i][7 - i] = '#';
        }
//E
        for (int j = 10; j < 16; j++) { //顶部E
            map[2][j] = '#';
        }
        for (int j = 10; j < 16; j++) { //中间E
            map[4][j] = '#';
        }
        for (int j = 10; j < 16; j++) { //底部E
            map[6][j] = '#';
        }
         //底部E
            map[3][10] = '#';
            map[5][10] = '#';

//L
        //底部L
        for (int j = 19; j < 25; j++) { //底部E
            map[6][j] = '#';
        }
        //|
        map[2][19] = '#';
        map[3][19] = '#';
        map[4][19] = '#';
        map[5][19] = '#';

//A

        for (int j = 28; j < 31; j++) { //顶部-
            map[8][j] = '#';
        }
        for (int j = 27; j < 32; j++) { //中间-
            map[10][j] = '#';
        }
        for (int i = 7; i <= 12; i++) {
            map[i][i + 22 /* 右斜线起始列偏移量 */] = '#';
        }
        for (int i = 9; i <= 12; i++) {
            map[i][19 - (i - 17)] = '#'; // 左斜线
        }

//R

        for (int j = 0; j < 7; j++) { //顶部R
            map[14][j] = '#';
        }
        for (int j = 0; j < 7; j++) { //顶部R
            map[16][j] = '#';
        }
        map[15][7] = '#';
        map[17][1] = '#';
        map[18][4] = '#';
        map[19][6] = '#';


//I
        for (int j = 11; j < 17; j++) { //顶部I
            map[14][j] = '#';
        }

        for (int j = 11; j < 17; j++) { //底部I
            map[19][j] = '#';
        }
        map[15][13] = '#';map[15][14] = '#';
        map[16][13] = '#';map[16][14] = '#';
        map[17][13] = '#';map[17][14] = '#';
        map[18][13] = '#';map[18][14] = '#';

//O
        for (int j = 21; j < 27; j++) { //顶部
            map[14][j] = '#';
        }

        for (int j = 21; j < 27; j++) { //底部
            map[19][j] = '#';
        }
        map[15][20] = '#';map[15][27] = '#';
        map[16][20] = '#';map[16][27] = '#';
        map[17][20] = '#';map[17][27] = '#';
        map[18][20] = '#';map[18][27] = '#';


        // 障碍物区域
        for (int i = 30; i <= 34; i++) {
            for (int j = 30; j <= 34; j++) {
                map[i][j] = '#';
            }
        }

        // 障碍物区域
        for (int i = 23; i <= 27; i++) {
            for (int j = 23; j <= 27; j++) {
                map[i][j] = '#';
            }
        }

        // boss
        for (int i = 34; i <= 38; i++) {
            for (int j = 2; j <= 10; j++) {
                map[i][j] = '@';
            }
        }

// 打印地图
            for (int i = 0; i < 40; i++) {
                for (int j = 0; j < 40; j++) {
                    System.out.print(map[i][j]);
                }
                System.out.println(); 
            }
        }

    }



